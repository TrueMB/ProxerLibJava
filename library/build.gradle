apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

group = 'com.github.proxer'

android {
    compileSdkVersion 24
    buildToolsVersion '24.0.2'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 24
        versionCode 41
        versionName "2.1.1"
        consumerProguardFiles 'proguard-rules.pro'
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        androidTest.java.srcDirs += 'src/testUtils/java'
        androidTest.resources.srcDirs += 'src/androidTest/res'
    }
}

dependencies {
    compile "com.android.support:support-annotations:$support_version"
    compile 'com.squareup.moshi:moshi:1.2.0'
    compile "com.squareup.okhttp3:okhttp:$okhttp_version"
    compile 'com.github.franmontiel:PersistentCookieJar:v1.0.0'

    androidTestCompile "com.android.support:support-annotations:$support_version"
    androidTestCompile "com.squareup.okhttp3:mockwebserver:$okhttp_version"
    androidTestCompile "com.android.support.test:runner:$support_test_version"
    androidTestCompile "com.android.support.test:rules:$support_test_version"
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    options.memberLevel = JavadocMemberLevel.PUBLIC
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.getDestinationDir()
}

artifacts {
    archives sourcesJar
    archives javadocJar
}