import org.jetbrains.dokka.gradle.DokkaTask
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import org.jlleitschuh.gradle.ktlint.reporter.ReporterType

apply plugin: "kotlin"
apply plugin: "kotlin-kapt"
apply plugin: "java-library"
apply plugin: "maven-publish"
apply plugin: "org.jetbrains.dokka"

apply plugin: "jacoco"
apply plugin: "io.gitlab.arturbosch.detekt"
apply plugin: "org.jlleitschuh.gradle.ktlint"

apply plugin: "com.github.ben-manes.versions"
apply plugin: "de.fuerstenau.buildconfig"

apply plugin: "idea"

apply from: "${rootDir}/gradle/dependencies.gradle"

task dokkaJavadoc(type: DokkaTask) {
    outputFormat = "html"
    outputDirectory = javadoc.destinationDir
    enabled = JavaVersion.current().isJava8()

    includeNonPublic = false
    jdkVersion = 8

    externalDocumentationLink { url = new URL("https://square.github.io/retrofit/2.x/retrofit/") }
    externalDocumentationLink { url = new URL("https://square.github.io/okhttp/3.x/okhttp/") }
    externalDocumentationLink { url = new URL("https://square.github.io/moshi/1.x/moshi/") }

    packageOptions {
        prefix = "com.github.proxer.library.enums"
        reportUndocumented = false
    }
}

task sourceJar(type: Jar) {
    archiveClassifier = "sources"

    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier = "javadoc"

    from javadoc.destinationDir
}

tasks.withType(KotlinCompile).all {
    kotlinOptions { freeCompilerArgs = ["-progressive"] }
}

test {
    finalizedBy jacocoTestReport

    useJUnitPlatform()
}

buildConfig {
    packageName = "me.proxer.library"
    version = project.version
}

jacoco {
    setToolVersion(jacocoVersion)
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = false
    }
}

ktlint {
    reporters = [ReporterType.CHECKSTYLE]
}

detekt {
    config = files("$rootDir/config/detekt.yml")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "ProxerLibJava"

            from components.java

            artifact sourceJar
            artifact javadocJar

            pom {
                name = "ProxerLibJava"
                description = "A JVM and Android library, implementing the API of the Proxer.Me website"
                url = "https://github.com/proxer/ProxerLibJava"

                scm {
                    url = "https://github.com/proxer/ProxerLibJava"
                    connection = "scm:git:https://github.com/proxer/ProxerLibJava"
                    developerConnection = "scm:git:git@github.com/proxer/ProxerLibJava"
                    tag = "HEAD"
                }

                issueManagement {
                    system = "GitHub Issues"
                    url = "https://github.com/proxer/ProxerLibJava/issues"
                }

                licenses {
                    license {
                        name = "MIT"
                        url = "https://opensource.org/licenses/MIT"
                        distribution = "repo"
                    }
                }
            }
        }
    }
}
