ext {
    version = '3.0.0'
    group = 'com.github.proxer'

    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

def jetbrainsAnnotationsVersion = '13.0'

def retrofitVersion = '2.2.0'
def okhttpVersion = '3.6.0'
def moshiVersion = '1.4.0'

def lombokVersion = '1.16.14'

def junitVersion = '4.12'
def assertjVersion = '3.6.2'

ext.deps = [
        jetbrainsAnnotations: "org.jetbrains:annotations:$jetbrainsAnnotationsVersion",

        retrofit            : "com.squareup.retrofit2:retrofit:$retrofitVersion",
        retrofitMoshi       : "com.squareup.retrofit2:converter-moshi:$retrofitVersion",
        okhttp              : "com.squareup.okhttp3:okhttp:$okhttpVersion",
        moshi               : "com.squareup.moshi:moshi:$moshiVersion",

        lombok              : "org.projectlombok:lombok:$lombokVersion",

        junit               : "junit:junit:$junitVersion",
        assertj             : "org.assertj:assertj-core:$assertjVersion",

        mockwebserver       : "com.squareup.okhttp3:mockwebserver:$okhttpVersion"
]

allprojects {
    version = rootProject.ext.version
    group = rootProject.ext.group

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    tasks.matching { it instanceof JavaCompile && it.name != "compileTestJava" }.all {
        sourceCompatibility = rootProject.ext.sourceCompatibility
        targetCompatibility = rootProject.ext.targetCompatibility

        if (System.getenv('CIRCLECI')) {
            options.bootClasspath = "/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/rt.jar"
        }
    }

    repositories {
        mavenCentral()
        jcenter()
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.4.1'
}
